post:
  callbacks:
    callStreamingStarted:
      '{$request.body#/webhook_url}':
        post:
          requestBody:
            content:
              application/json:
                schema:
                  $ref: ../components/schemas/CallStreamingStartedEvent.yaml
            required: true
          responses:
            '200':
              description: >-
                The server must return an HTTP 200, otherwise we will reattempt
                delivery at the failover webhook URL.
    callStreamingStopped:
      '{$request.body#/webhook_url}':
        post:
          requestBody:
            content:
              application/json:
                schema:
                  $ref: ../components/schemas/CallStreamingStoppedEvent.yaml
            required: true
          responses:
            '200':
              description: >-
                The server must return an HTTP 200, otherwise we will reattempt
                delivery at the failover webhook URL.
  description: >
    Start streaming the media from a call to a specific WebSocket address in
    near-realtime. 

    Audio will be delivered as base64-encoded RTP packets, wrapped in JSON
    payloads. 


    **Expected Webhooks:**


    - `streaming.started`

    - `streaming.stopped`


    **WebSocket events**


    When the WebSocket connection is established, the following event is being
    sent over it:

    ```

    {
      "event": "connected",
      "version": "1.0.0"
    }

    ```

    And when the call is started, an event which contains information about the
    encoding and `stream_id` that identifies a particular stream:

    ```

    {
      "event": "start",
      "sequence_number": "1",
      "start": {
        "user_id": "3E6F995F-85F7-4705-9741-53B116D28237",
        "call_control_id": "v2:T02llQxIyaRkhfRKxgAP8nY511EhFLizdvdUKJiSw8d6A9BborherQ", 
        "client_state": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
        "media_format": {
          "encoding": "audio/x-mulaw",
          "sample_rate": 8000,
          "channels": 1
        }
      },
      "stream_id": "32DE0DEA-53CB-4B21-89A4-9E1819C043BC"
    }

    ```

    The start event is followed by the following media events that contain
    base64-encoded RTP packets as their payloads:

    ```

    { 
      "event": "media",
      "sequence_number": "4",
      "media": { 
        "track": "inbound/outbound", 
        "chunk": "2",
        "timestamp": "5",
        "payload": "no+JhoaJjpzSHxAKBgYJD...IsSbjomGhoqQn1Ic"                        
      },
      "stream_id": "32DE0DEA-53CB-4B21-89A4-9E1819C043BC" 
    }

    ```

    Please note that the order of events is not guaranteed and the chunk number
    can be used to reorder the events.


    When the call ends, the stop event over WebSockets connection is sent:

    ```

    { 
      "event": "stop",
      "sequence_number": "5",
      "stop": {
        "user_id": "3E6F995F-85F7-4705-9741-53B116D28237",
        "call_control_id": "v2:T02llQxIyaRkhfRKxgAP8nY511EhFLizdvdUKJiSw8d6A9BborherQ"
       },
        "stream_id": "32DE0DEA-53CB-4B21-89A4-9E1819C043BC" 
     }
    ```
  operationId: callStreamingStart
  parameters:
    - $ref: ../components/parameters/CallControlId.yaml
  requestBody:
    content:
      application/json:
        schema:
          $ref: ../components/schemas/StartStreamingRequest.yaml
    description: Start streaming media request
    required: true
  responses:
    '200':
      $ref: ../components/responses/CallControlCommandResponse.yaml
    default:
      $ref: ../components/responses/GenericErrorResponse.yaml
  summary: Streaming start
  tags:
    - Call Commands
  x-latency-category: interactive
