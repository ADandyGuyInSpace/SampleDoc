get:
  description: ''
  operationId: ListFaxes
  parameters:
    - description: ISO 8601 date time for filtering faxes created after or on that date
      in: query
      name: filter[created_at][gte]
      schema:
        example: '2020-02-02T22:25:27.521992Z'
        format: date-time
        type: string
    - description: ISO 8601 date time for filtering faxes created after that date
      in: query
      name: filter[created_at][gt]
      schema:
        example: '2020-02-02T22:25:27.521992Z'
        format: date-time
        type: string
    - description: >-
        ISO 8601 formatted date time for filtering faxes created on or before
        that date
      in: query
      name: filter[created_at][lte]
      schema:
        example: '2020-02-02T22:25:27.521992Z'
        format: date-time
        type: string
    - description: >-
        ISO 8601 formatted date time for filtering faxes created before that
        date
      in: query
      name: filter[created_at][lt]
      schema:
        example: '2020-02-02T22:25:27.521992Z'
        format: date-time
        type: string
    - description: >-
        The direction, inbound or outbound, for filtering faxes sent from this
        account
      in: query
      name: filter[direction][eq]
      schema:
        example: inbound
        type: string
    - description: >-
        The phone number, in E.164 format for filtering faxes sent from this
        number
      in: query
      name: filter[from][eq]
      schema:
        example: '+13127367276'
        type: string
    - description: Number of fax resourcxes for the single page returned
      in: query
      name: page[size]
      schema:
        example: 2
        type: integer
    - description: Number of the page to be retrieved
      in: query
      name: page[number]
      schema:
        example: 2
        type: integer
  responses:
    '200':
      $ref: ../components/responses/ListFaxesResponse.yaml
    default:
      $ref: ../components/responses/GenericErrorResponse.yaml
  summary: View a list of faxes
  tags:
    - Programmable Fax Commands
  x-latency-category: background
post:
  callbacks:
    fax.delivered:
      '{$response.body#/data/webhook_url}':
        post:
          requestBody:
            content:
              application/json:
                schema:
                  $ref: ../components/schemas/FaxDelivered.yaml
            required: true
          responses:
            '200':
              description: >-
                The server must return an HTTP 200, otherwise we will reattempt
                delivery at the failover webhook URL.
    fax.failed:
      '{$response.body#/data/webhook_url}':
        post:
          requestBody:
            content:
              application/json:
                schema:
                  $ref: ../components/schemas/FaxFailed.yaml
            required: true
          responses:
            '200':
              description: >-
                The server must return an HTTP 200, otherwise we will reattempt
                delivery at the failover webhook URL.
    fax.media.processed:
      '{$response.body#/data/webhook_url}':
        post:
          requestBody:
            content:
              application/json:
                schema:
                  $ref: ../components/schemas/FaxMediaProcessed.yaml
            required: true
          responses:
            '200':
              description: >-
                The server must return an HTTP 200, otherwise we will reattempt
                delivery at the failover webhook URL.
    fax.queued:
      '{$response.body#/data/webhook_url}':
        post:
          requestBody:
            content:
              application/json:
                schema:
                  $ref: ../components/schemas/FaxQueued.yaml
            required: true
          responses:
            '200':
              description: >-
                The server must return an HTTP 200, otherwise we will reattempt
                delivery at the failover webhook URL.
    fax.sending.started:
      '{$response.body#/data/webhook_url}':
        post:
          requestBody:
            content:
              application/json:
                schema:
                  $ref: ../components/schemas/FaxSendingStarted.yaml
            required: true
          responses:
            '200':
              description: >-
                The server must return an HTTP 200, otherwise we will reattempt
                delivery at the failover webhook URL.
  description: >
    Send a fax. Files have size limits and page count limit validations. If a
    file is bigger than 50MB or has more than 350 pages it will fail with
    `file_size_limit_exceeded` and `page_count_limit_exceeded` respectively. 


    **Expected Webhooks:**


    - `fax.queued`

    - `fax.media.processed`

    - `fax.sending.started`

    - `fax.delivered`

    - `fax.failed`
  operationId: SendFax
  requestBody:
    content:
      application/json:
        schema:
          $ref: ../components/schemas/SendFaxRequest.yaml
      multipart/form-data:
        schema:
          $ref: ../components/schemas/SendFaxMultipartRequest.yaml
    description: Send fax request
    required: true
  responses:
    '202':
      $ref: ../components/responses/SendFaxResponse.yaml
    default:
      $ref: ../components/responses/GenericErrorResponse.yaml
  summary: Send a fax
  tags:
    - Programmable Fax Commands
    - Group Example
  x-latency-category: responsive
