example:
  answering_machine_detection: detect
  answering_machine_detection_config:
    after_greeting_silence_millis: 1000
    between_words_silence_millis: 1000
    greeting_duration_millis: 1000
    greeting_silence_duration_millis: 2000
    greeting_total_analysis_time_millis: 50000
    initial_silence_millis: 1000
    maximum_number_of_words: 1000
    maximum_word_length_millis: 2000
    silence_threshold: 512
    total_analysis_time_millis: 5000
  audio_url: http://www.example.com/sounds/greeting.wav
  client_state: aGF2ZSBhIG5pY2UgZGF5ID1d
  command_id: 891510ac-f3e4-11e8-af5b-de00688a4901
  connection_id: 7267xxxxxxxxxxxxxx
  custom_headers:
    - name: head_1
      value: val_1
    - name: head_2
      value: val_2
  dialogflow_config:
    analyze_sentiment: false
  enable_dialogflow: false
  from: '+18005550101'
  from_display_name: Company Name
  link_to: ilditnZK_eVysupV21KzmzN_sM29ygfauQojpm4BgFtfX5hXAcjotg==
  sip_auth_password: password
  sip_auth_username: username
  timeout_limit_secs: 60
  timeout_secs: 60
  to: +18005550100 or sip:username@sip.telnyx.com
  webhook_url: https://www.example.com/server-b/
  webhook_url_method: POST
properties:
  answering_machine_detection:
    default: disabled
    description: >-
      Enables Answering Machine Detection. When a call is answered, Telnyx runs
      real-time detection to determine if it was picked up by a human or a
      machine and sends an `call.machine.detection.ended` webhook with the
      analysis result. If 'greeting_end' or 'detect_words' is used and a
      'machine' is detected, you will receive another
      'call.machine.greeting.ended' webhook when the answering machine greeting
      ends with a beep or silence. If `detect_beep` is used, you will only
      receive 'call.machine.greeting.ended' if a beep is detected.
    enum:
      - detect
      - detect_beep
      - detect_words
      - greeting_end
      - disabled
    type: string
  answering_machine_detection_config:
    description: >-
      Optional configuration parameters to modify 'answering_machine_detection'
      performance.
    properties:
      after_greeting_silence_millis:
        default: 800
        description: >-
          Silence duration threshold after a greeting message or voice for it be
          considered human.
        example: 1000
        format: int32
        type: integer
      between_words_silence_millis:
        default: 50
        description: Maximum threshold for silence between words.
        example: 100
        format: int32
        type: integer
      greeting_duration_millis:
        default: 3500
        description: >-
          Maximum threshold of a human greeting. If greeting longer than this
          value, considered machine.
        example: 1500
        format: int32
        type: integer
      greeting_silence_duration_millis:
        default: 1500
        description: >-
          If machine already detected, maximum threshold for silence between
          words. If exceeded, the greeting is considered ended.
        example: 2000
        format: int32
        type: integer
      greeting_total_analysis_time_millis:
        default: 5000
        description: >-
          If machine already detected, maximum timeout threshold to determine
          the end of the machine greeting.
        example: 7500
        format: int32
        type: integer
      initial_silence_millis:
        default: 3500
        description: >-
          If initial silence duration is greater than this value, consider it a
          machine.
        example: 1800
        format: int32
        type: integer
      maximum_number_of_words:
        default: 5
        description: >-
          If number of detected words is greater than this value, consder it a
          machine.
        example: 3
        format: int32
        type: integer
      maximum_word_length_millis:
        default: 3500
        description: >-
          If a single word lasts longer than this threshold, consider it a
          machine.
        example: 2000
        format: int32
        type: integer
      silence_threshold:
        default: 256
        description: Minimum noise threshold for any analysis.
        example: 512
        format: int32
        type: integer
      total_analysis_time_millis:
        default: 3500
        description: Maximum timeout threshold for overall detection.
        example: 5000
        format: int32
        type: integer
    type: object
  audio_url:
    description: >-
      The URL of a file to be played back to the callee when the call is
      answered. The URL can point to either a WAV or MP3 file. media_name and
      audio_url cannot be used together in one request.
    example: http://example.com/message.wav
    type: string
  billing_group_id:
    description: >-
      Use this field to set the Billing Group ID for the call. Must be a valid
      and existing Billing Group ID.
    example: f5586561-8ff0-4291-a0ac-84fe544797bd
    format: uuid
    type: string
  client_state:
    description: >-
      Use this field to add state to every subsequent webhook. It must be a
      valid Base-64 encoded string.
    example: aGF2ZSBhIG5pY2UgZGF5ID1d
    type: string
  command_id:
    description: >-
      Use this field to avoid duplicate commands. Telnyx will ignore others Dial
      commands with the same `command_id`.
    example: 891510ac-f3e4-11e8-af5b-de00688a4901
    type: string
  connection_id:
    description: >-
      The ID of the Call Control App (formerly ID of the connection) to be used
      when dialing the destination.
    type: string
  custom_headers:
    description: Custom headers to be added to the SIP INVITE.
    example:
      - name: head_1
        value: val_1
      - name: head_2
        value: val_2
    items:
      $ref: ./CustomSipHeader.yaml
    type: array
  dialogflow_config:
    $ref: ./DialogflowConfig.yaml
  enable_dialogflow:
    default: false
    description: Enables Dialogflow for the current call. The default value is false.
    example: true
    type: boolean
  from:
    description: >-
      The `from` number to be used as the caller id presented to the destination
      (`to` number). The number should be in +E164 format. This attribute will
      default to the `from` number of the original call if omitted.
    example: '+18005550101'
    type: string
  from_display_name:
    description: >-
      The `from_display_name` string to be used as the caller id name (SIP From
      Display Name) presented to the destination (`to` number). The string
      should have a maximum of 128 characters, containing only letters, numbers,
      spaces, and -_~!.+ special characters. If ommited, the display name will
      be the same as the number in the `from` field.
    example: Company Name
    type: string
  link_to:
    description: Use another call's control id for sharing the same call session id
    example: ilditnZK_eVysupV21KzmzN_sM29ygfauQojpm4BgFtfX5hXAcjotg==
    type: string
  media_name:
    description: >-
      The media_name of a file to be played back to the callee when the call is
      answered. The media_name must point to a file previously uploaded to
      api.telnyx.com/v2/media by the same user/organization. The file must
      either be a WAV or MP3 file.
    example: my_media_uploaded_to_media_storage_api
    type: string
  preferred_codecs:
    description: >-
      The list of comma-separated codecs in a preferred order for the forked
      media to be received.
    example: G722,PCMU,PCMA,G729,OPUS,VP8,H264
    type: string
  record:
    description: Start recording automatically after an event. Disabled by default.
    enum:
      - record-from-answer
    example: record-from-answer
    type: string
  record_channels:
    default: dual
    description: >-
      Defines which channel should be recorded ('single' or 'dual') when
      `record` is specified.
    enum:
      - single
      - dual
    example: single
    type: string
  record_format:
    default: mp3
    description: >-
      Defines the format of the recording ('wav' or 'mp3') when `record` is
      specified.
    enum:
      - wav
      - mp3
    example: wav
    type: string
  record_max_length:
    default: 0
    description: >-
      Defines the maximum length for the recording in seconds when `record` is
      specified. The minimum value is 0. The maximum value is 43200. The default
      value is 0 (infinite).
    example: 1000
    format: int32
    type: integer
  record_timeout_secs:
    defaut: 0
    description: >-
      The number of seconds that Telnyx will wait for the recording to be
      stopped if silence is detected when `record` is specified. The timer only
      starts when the speech is detected. The minimum value is 0. The default
      value is 0 (infinite).
    example: 100
    format: int32
    type: integer
  sip_auth_password:
    description: SIP Authentication password used for SIP challenges.
    type: string
  sip_auth_username:
    description: SIP Authentication username used for SIP challenges.
    type: string
  sound_modifications:
    $ref: ./SoundModifications.yaml
  stream_track:
    default: inbound_track
    description: Specifies which track should be streamed.
    enum:
      - inbound_track
      - outbound_track
      - both_tracks
    example: both_tracks
    type: string
  stream_url:
    description: >-
      The destination WebSocket address where the stream is going to be
      delivered.
    example: wss://www.example.com/websocket
    type: string
  time_limit_secs:
    default: 14400
    description: >-
      Sets the maximum duration of a Call Control Leg in seconds. If the time
      limit is reached, the call will hangup and a `call.hangup` webhook with a
      `hangup_cause` of `time_limit` will be sent. For example, by setting a
      time limit of 120 seconds, a Call Leg will be automatically terminated two
      minutes after being answered. The default time limit is 14400 seconds or 4
      hours and this is also the maximum allowed call length.
    example: 600
    format: int32
    type: integer
  timeout_secs:
    default: 30
    description: >-
      The number of seconds that Telnyx will wait for the call to be answered by
      the destination to which it is being called. If the timeout is reached
      before an answer is received, the call will hangup and a `call.hangup`
      webhook with a `hangup_cause` of `timeout` will be sent. Minimum value is
      5 seconds. Maximum value is 120 seconds.
    example: 60
    format: int32
    type: integer
  to:
    description: >-
      The DID or SIP URI to dial out to. Multiple DID or SIP URIs can be
      provided using an array of strings
    oneOf:
      - example: +18005550100 or sip:username@sip.telnyx.com
        type: string
      - example: '["+18005550100", "sip:username@sip.telnyx.com"]'
        items:
          type: string
        type: array
  webhook_url:
    description: >-
      Use this field to override the URL for which Telnyx will send subsequent
      webhooks to for this call.
    example: https://www.example.com/server-b/
    type: string
  webhook_url_method:
    default: POST
    description: HTTP request type used for `webhook_url`.
    enum:
      - POST
      - GET
    example: GET
    type: string
required:
  - connection_id
  - to
  - from
title: Dial Request
type: object
